* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

:root {
    --w: 200;
    --h: 100;
    --d: 50;
    --width: calc(var(--w) * 1px);
    --height: calc(var(--h) * 1px);
    --depth: calc(var(--d) * 1px);
    --size: 200;
    --perspective: 400px;
}

@mixin flex-center(){ 
    display: flex;
    align-items: center;
    justify-content: center;
}


body {
    height: 100vh;
    @include flex-center();
}

.scene {
    width: var(--width);
    height: var(--height);
    @include flex-center();
    perspective: var(--perspective);
}

.cube {
    width: var(--width);
    height: var(--height);
    position: relative;
    transform-style: preserve-3d;


    &__face {
        @include flex-center();
        border: 1px solid gray;
        width: 100%;
        height: 100%;
        position: absolute;

        &--front {
            background-color: rgba(81, 139, 139, 0.419);
            height: var(--depth);
            transform: translateZ(calc(var(--h) / 2 * 1px));
        }
        &--back {
            background-color: rgba(165, 42, 42, 0.429);
            height: var(--depth);
            transform: translateZ(calc(var(--h) / 2 * -1px));
        }

        &--left{
            width: calc(var(--width) / 2);
            height: var(--depth);
            background-color: rgba(0, 128, 0, 0.525);
            transform: rotateY(90deg) translateZ(calc(var(--w)/4 * 3px));
            
        }
        &--right {
            width: calc(var(--width) / 2);
            height: var(--depth);
            background-color: rgba(255, 0, 0, 0.49);
            transform: rotateY(90deg) translateZ(calc(var(--w)/4 * -1px));
        }

        &--top {
            background-color: rgba(255, 192, 203, 0.542);
            transform: rotateX(90deg) translateZ(calc(var(--h) / 2 * 1px));
        }

        &--bottom {
            background-color: rgba(255, 217, 0, 0.443);
            transform: rotateX(90deg) ;
            
        }
   
    }
}

.animate {
    animation-name: rotateY;
    animation-duration: 2s;
    animation-timing-function: ease-in-out;
    animation-iteration-count: infinite;
    animation-direction: alternate;
    animation-fill-mode: forwards;
}

@keyframes rotateY {
    to {
        transform: rotateY(360deg) rotateZ(360deg);
    }
}